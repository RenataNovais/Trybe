{"version":3,"sources":["data.js","components/Header.jsx","components/Bookmarked.jsx","components/SearchBar.jsx","components/Rating.jsx","components/MovieCard.jsx","components/MovieList.jsx","components/InputField.jsx","components/TextAreaField.jsx","components/CheckBox.jsx","components/AddMovie.jsx","components/MovieLibrary.jsx","App.js","serviceWorker.js","index.js"],"names":["movies","title","subtitle","storyline","rating","imagePath","bookmarked","genre","Header","className","React","Component","Bookmarked","this","props","checked","onChange","id","type","htmlFor","SearchBar","searchText","selectedGenre","bookmarkedOnly","onSearchTextChange","onBookmarkedChange","onSelectedGenreChange","value","Rating","MovieCard","movie","alt","src","MovieList","map","key","InputField","name","func","placeholder","TextArea","handleChange","CheckBox","ids","types","index","AddMovie","state","change","bind","addThisMovie","event","target","parseFloat","setState","e","preventDefault","onClick","MovieLibrary","filteredMovies","addMovie","filter","includes","newMovie","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7ced8bef.chunk.js","sourcesContent":["const movies = [\n  {\n    title: 'Kingsglaive',\n    subtitle: 'Final Fantasy XV',\n    storyline: \"King Regis, who oversees the land of Lucis, commands his army of soldiers to protect the kingdom from the Niflheim empire's plans to steal the sacred crystal.\",\n    rating: 4.5,\n    imagePath: 'images/Kingsglaive_Final_Fantasy_XV.jpg',\n    bookmarked: true,\n    genre: 'action',\n  },\n  {\n    title: 'Final Fantasy',\n    subtitle: 'Spirits Within',\n    storyline: 'A scientist makes a last stand on Earth with the help of a ragtag team of soldiers against an invasion of alien phantoms.',\n    rating: 4.5,\n    imagePath: 'images/Final_Fantasy_Spirits_Within.jpg',\n    bookmarked: false,\n    genre: 'fantasy',\n  },\n  {\n    title: 'Ghost In The Shell',\n    subtitle: 'Ghost In The Shell',\n    storyline: 'A hacker known as the Puppet Master is hunted by a female cyborg cop and her partner. This film is a revised version of Ghost in the Shell (1995).',\n    rating: 5,\n    imagePath: 'images/Kingsglaive_Final_Fantasy_XV.jpg',\n    bookmarked: false,\n    genre: 'comedy',\n  },\n  {\n    title: 'Appleseed Alpha',\n    subtitle: 'Appleseed Alpha',\n    storyline: \"A young female soldier Deunan and her cyborg partner Briareos survive through the post World War 3 apocalyptic New York in search of human's future hope, the legendary city of Olympus.\",\n    rating: 3.8,\n    imagePath: 'images/Appleseed_Alpha.jpg',\n    bookmarked: true,\n    genre: 'action',\n  },\n  {\n    title: 'Resident Evil',\n    subtitle: 'Vendetta',\n    storyline: 'Chris Redfield enlists the help of Leon S. Kennedy and Rebecca Chambers to stop a death merchant, with a vengeance, from spreading a deadly virus in New York.',\n    rating: 4.2,\n    imagePath: 'images/Resident_Evil_Vendetta.jpg',\n    bookmarked: true,\n    genre: 'fantasy',\n  },\n];\n\nexport default movies;\n","import React from 'react';\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <header className=\"movie-card-header\">\n        <h1 className=\"page-title\">Movie Cards Library</h1>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\n\nclass Bookmarked extends React.Component {\n  render() {\n    const { checked, onChange } = this.props;\n    return (\n      <div className=\"checkbox-group\">\n        <input\n          id=\"bookmarked\"\n          type=\"checkbox\"\n          checked={checked}\n          onChange={onChange}\n        />\n        <label htmlFor=\"bookmarked\">Mostrar somente favoritos</label>\n      </div>\n    );\n  }\n}\n\nexport default Bookmarked;\n","// implement SearchBar component here\nimport React from 'react';\nimport Bookmarked from './Bookmarked';\n\nclass SearchBar extends React.Component {\n  render() {\n    const {\n      searchText,\n      selectedGenre,\n      bookmarkedOnly,\n      onSearchTextChange,\n      onBookmarkedChange,\n      onSelectedGenreChange,\n    } = this.props;\n    return (\n      <form className=\"searchBar-container\">\n        <div className=\"input-group\">\n          <label htmlFor=\"searchText\">Inclui o texto:</label>\n          <input id=\"searchText\" type=\"text\" value={searchText} onChange={onSearchTextChange} />\n        </div>\n        <div>\n          <Bookmarked checked={bookmarkedOnly} onChange={onBookmarkedChange} />\n        </div>\n        <div className=\"input-group\">\n          <label htmlFor=\"genre\">Filtrar por gÃªnero:</label>\n          <select id=\"genre\" value={selectedGenre} onChange={onSelectedGenreChange}>\n            <option value=\"\">Todos</option>\n            <option value=\"action\">AÃ§Ã£o</option>\n            <option value=\"comedy\">ComÃ©dia</option>\n            <option value=\"thriller\">Suspense</option>\n          </select>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React from 'react';\n\nclass Rating extends React.Component {\n  render() {\n    const { rating } = this.props;\n    return (\n      <div className=\"movie-card-rating\">\n        <span className=\"rating\">{rating}</span>\n      </div>\n    );\n  }\n}\n\nexport default Rating;\n","import React from 'react';\n\nimport Rating from './Rating';\n\nclass MovieCard extends React.Component {\n  render() {\n    const { movie } = this.props;\n    const { title, subtitle, storyline, rating, imagePath } = movie;\n    return (\n      <div className=\"movie-card\">\n        <img alt=\"Movie Cover\" className=\"movie-card-image\" src={imagePath} />\n        <div className=\"movie-card-body\">\n          <h4 className=\"movie-card-title\">{title}</h4>\n          <h5 className=\"movie-card-subtitle\">{subtitle}</h5>\n          <p className=\"movie-card-storyline\">{storyline}</p>\n        </div>\n        <Rating rating={rating} />\n      </div>\n    );\n  }\n}\n\nexport default MovieCard;\n","import React from 'react';\n\nimport MovieCard from './MovieCard';\n\nclass MovieList extends React.Component {\n  render() {\n    const { movies } = this.props;\n\n    return (\n      <div className=\"movie-list\">\n        {movies.map((movie) => <MovieCard key={movie.title} movie={movie} />)}\n      </div>\n    );\n  }\n}\n\nexport default MovieList;\n","import React from 'react';\n\nclass InputField extends React.Component {\n  render() {\n    const { name, title, type, value, func } = this.props;\n    return (\n      <div className=\"input-group\">\n        <label htmlFor={name}>\n          {title}\n        </label>\n        <input\n          name={name}\n          placeholder={title}\n          type={type}\n          value={value}\n          onChange={func}\n        />\n      </div>\n    );\n  }\n}\n\nexport default InputField;\n","import React from 'react';\n\nclass TextArea extends React.Component {\n  render() {\n    const { name, title, value, handleChange } = this.props;\n    return (\n      <div className=\"input-group\">\n        <label htmlFor={name}>\n          {title}\n        </label>\n        <textarea\n          name={name}\n          value={value}\n          onChange={handleChange}\n        />\n      </div>\n    );\n  }\n}\n\nexport default TextArea;\n","import React from 'react';\n\nclass CheckBox extends React.Component {\n  render() {\n    const { name, title, value, handleChange, ids, types } = this.props;\n    return (\n      <div className=\"input-group\">\n        <label htmlFor={name}>{title}</label>\n        <select value={value} name={name} onChange={handleChange}>\n          {ids.map((id, index) => <option key={id} value={id}>{types[index]}</option>)}\n        </select>\n      </div>\n    );\n  }\n}\n\nexport default CheckBox;\n","// implement AddMovie component here\nimport React from 'react';\nimport InputField from './InputField';\nimport TextArea from './TextAreaField';\nimport CheckBox from './CheckBox';\n\nclass AddMovie extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      subtitle: '',\n      title: '',\n      imagePath: '',\n      storyline: '',\n      rating: 0,\n      genre: 'action',\n    };\n\n    this.change = this.change.bind(this);\n    this.addThisMovie = this.addThisMovie.bind(this);\n  }\n\n  change(event) {\n    const { name } = event.target;\n    let { value } = event.target;\n    if (name === 'rating') value = parseFloat(value);\n    this.setState({ [name]: value });\n  }\n\n  addThisMovie(e) {\n    e.preventDefault();\n    const onClick = this.props.onClick;\n    onClick(this.state);\n    this.setState({\n      subtitle: '',\n      title: '',\n      imagePath: '',\n      storyline: '',\n      rating: 0,\n      genre: 'action',\n    });\n  }\n\n  render() {\n    return (\n      <form className=\"forms-container\">\n        <h3>Adicione um novo filme!</h3>\n        <InputField\n          name=\"title\" title=\"TÃ­tulo\" type=\"text\" value={this.state.title} func={this.change}\n        />\n        <InputField\n          name=\"subtitle\" title=\"SubtÃ­tulo\" type=\"text\" value={this.state.subtitle}\n          func={this.change}\n        />\n        <InputField\n          name=\"imagePath\" title=\"Imagem\"type=\"text\"value={this.state.imagePath}func={this.change}\n        />\n        <TextArea\n          name=\"storyline\" title=\"Sinopse\" value={this.state.storyline} handleChange={this.change}\n        />\n        <InputField\n          name=\"rating\" title=\"AvaliaÃ§Ã£o\" type=\"number\" value={this.state.rating} func={this.change}\n        />\n        <CheckBox\n          name=\"genre\" title=\"GÃªnero\" value={this.state.genre} handleChange={this.change}\n          ids={['action', 'comedy', 'thriller']} types={['AÃ§Ã£o', 'ComÃ©dia', 'Suspense']}\n        />\n        <button onClick={this.addThisMovie}>Adicionar filme</button>\n      </form>\n    );\n  }\n}\n\nexport default AddMovie;\n","// implement MovieLibrary component here\nimport React from 'react';\nimport SearchBar from './SearchBar';\nimport MovieList from './MovieList';\nimport AddMovie from './AddMovie';\n\nclass MovieLibrary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchText: '',\n      bookmarkedOnly: false,\n      selectedGenre: '',\n      movies: this.props.movies,\n    };\n\n    this.filteredMovies = this.filteredMovies.bind(this);\n    this.addMovie = this.addMovie.bind(this);\n  }\n\n  filteredMovies() {\n    const { searchText, bookmarkedOnly, selectedGenre, movies } = this.state;\n    if (bookmarkedOnly === true) {\n      return movies.filter((movie) => movie.bookmarked === true);\n    }\n    if (selectedGenre) {\n      return movies.filter((movie) => movie.genre === selectedGenre);\n    }\n    if (searchText) {\n      return movies.filter((movie) =>\n        movie.title.includes(searchText) ||\n        movie.subtitle.includes(searchText) ||\n        movie.storyline.includes(searchText),\n      );\n    }\n    return movies;\n  }\n\n  addMovie(newMovie) {\n    this.setState({ movies: [...this.state.movies, newMovie] });\n  }\n\n  render() {\n    return (\n      <div>\n        <SearchBar\n          searchText={this.state.searchText}\n          onSearchTextChange={(event) => this.setState({ searchText: event.target.value })}\n          bookmarkedOnly={this.state.bookmarkedOnly}\n          onBookmarkedChange={() => this.setState({ bookmarkedOnly: !this.state.bookmarkedOnly })}\n          selectedGenre={this.state.selectedGenre}\n          onSelectedGenreChange={(event) => this.setState({ selectedGenre: event.target.value })}\n        />\n        <MovieList movies={this.filteredMovies()} />\n        <AddMovie onClick={this.addMovie} />\n      </div>\n    );\n  }\n}\n\nexport default MovieLibrary;\n","import React from 'react';\nimport './App.css';\nimport movies from './data';\nimport Header from './components/Header';\nimport MovieLibrary from './components/MovieLibrary';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <MovieLibrary movies={movies} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}